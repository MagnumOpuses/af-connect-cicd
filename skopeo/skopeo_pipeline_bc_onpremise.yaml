kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  name: skopeo-t2-pipeline
  annotations:
    application: skopeodemo
spec:
  triggers: []
  nodeSelector: {}
  output: {}
  resources: {}
  successfulBuildsHistoryLimit: 5
  failedBuildsHistoryLimit: 5
  strategy:
    type: JenkinsPipeline
    jenkinsPipelineStrategy:
      jenkinsfile: |-
        pipeline {
          agent {
              kubernetes {
                  label 'promotion-agent'
                  cloud 'openshift'
                  serviceAccount 'jenkins'
                  containerTemplate {
                      name 'jnlp'
                      image "image-registry.openshift-image-registry.svc:5000/${NAMESPACE}/skopeo:latest"
                      alwaysPullImage true
                      workingDir '/tmp'
                      args '${computer.jnlpmac} ${computer.name}'
                      command ''
                      ttyEnabled false
                    }
              }
          }
            environment {
                buildTag = "${BUILD_NUMBER}"
                buildName = "af-connect-demo"
                deploymentName = "af-connect-demo"
                containerName = "af-connect-demo"
            }
            stages {
                stage('Push Image'){
                    steps{
                        container('jnlp'){
                            sh "echo 'pushing images'"
                            sh """skopeo --debug copy --src-tls-verify=false --dest-tls-verify=false \
                            --src-creds=skopeo:${SCRED} --dest-creds=skopeo:${DCRED} \
                            docker://${AF_CONNECT_SOURCE_IMAGE_REPO}:latest docker://${AF_CONNECT_DEST_IMAGE_REPO}:latest
                            """
                            sh """skopeo --debug copy --src-tls-verify=false --dest-tls-verify=false \
                            --src-creds=skopeo:${SCRED} --dest-creds=skopeo:${DCRED} \
                            docker://${AF_CONNECT_OUTBOX_SOURCE_IMAGE_REPO}:latest docker://${AF_CONNECT_OUTBOX_DEST_IMAGE_REPO}:latest
                            """
                            sh """skopeo --debug copy --src-tls-verify=false --dest-tls-verify=false \
                            --src-creds=skopeo:${SCRED} --dest-creds=skopeo:${DCRED} \
                            docker://${AF_PORTABILITY_SOURCE_IMAGE_REPO}:latest docker://${AF_PORTABILITY_DEST_IMAGE_REPO}:latest
                            """
                            
                        }
                    }
                }
              }
          }
      env:
        - name: NAMESPACE
          value: "af-connect-cicd"
        
        - name: SCRED
          value: >-
            
        - name: DCRED
          value: >-
            
        - name: AF_CONNECT_SOURCE_IMAGE_REPO
          value: "default-route-openshift-image-registry.test.services.jtech.se/af-connect-cicd/af-connect"

        - name: AF_CONNECT_DEST_IMAGE_REPO
          value: "docker-registry-default.opservices.jtech.se/gravity-t2/af-connect"

        - name: AF_CONNECT_OUTBOX_SOURCE_IMAGE_REPO
          value: "default-route-openshift-image-registry.test.services.jtech.se/af-connect-cicd/af-connect-outbox"

        - name: AF_CONNECT_OUTBOX_DEST_IMAGE_REPO
          value: "docker-registry-default.opservices.jtech.se/gravity-t2/af-connect-outbox"

        - name: AF_PORTABILITY_SOURCE_IMAGE_REPO
          value: "default-route-openshift-image-registry.test.services.jtech.se/af-connect-cicd/af-portability"

        - name: AF_PORTABILITY_DEST_IMAGE_REPO
          value: "docker-registry-default.opservices.jtech.se/gravity-t2/af-portability"

        

        

  runPolicy: Serial
