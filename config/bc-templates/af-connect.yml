kind: Template
apiVersion: v1
metadata:
    name: af-connect
    annotations:
        openshift.io/display-name: 'AF-Connect'
        tags: 'af-connect,consent,nodejs'
        iconClass: icon-nodejs
        openshift.io/provider-display-name: 'Red Hat, Inc.'
        openshift.io/documentation-url: '${SOURCE_REPOSITORY_URL}'
labels:
    template: af-connect
    app: af-connect
objects:
    #-
    #    kind: ImageStream
    #    apiVersion: image.openshift.io/v1
    #    metadata:
    #        name: af-connect
    #        annotations:
    #            description: 'Keeps track of changes in the application image'
    -
        kind: BuildConfig
        apiVersion: build.openshift.io/v1
        metadata:
            name: af-connect
            annotations:
                description: 'Defines how to build the application'
        spec:
            runPolicy: Serial
            source:
                type: Git
                git:
                    uri: '${SOURCE_REPOSITORY_URL}'
                    ref: '${SOURCE_REPOSITORY_REF}'
            strategy:
                type: Docker
                dockerStrategy:
                    env:
                        -
                            name: REDIS_HOST
                            value: '${REDIS_HOST}'
            output:
                to:
                    kind: ImageStreamTag
                    name: af-connect:latest
            triggers: []
            nodeSelector: {}
parameters:
    -
        name: APPLICATION_NAME
        displayName: Name
        description: 'The name assigned to all of the frontend objects defined in this template.'
        required: true
        value: af-connect
    -
        name: NAMESPACE
        displayName: Namespace
        description: 'The OpenShift Namespace where the ImageStream resides.'
        required: true
        value: af-connect-cicd
    -
        name: SOURCE_REPOSITORY_URL
        displayName: 'Git Repository URL'
        description: 'The URL of the repository with your application source code.'
        required: true
        value: 'https://github.com/MagnumOpuses/af-connect.git'
    -
        name: SOURCE_REPOSITORY_REF
        displayName: 'Git Reference'
        description: 'Set this to a branch name, tag or other ref of your repository if you are not using the default branch.'
        required: true
        value: stage
    -
        name: APPLICATION_DOMAIN
        displayName: 'Application Hostname'
        description: 'The exposed hostname that will route to the Node.js service, if left blank a value will be defaulted.'
        value: ""
    -
        name: GITHUB_WEBHOOK_SECRET
        displayName: 'GitHub Webhook Secret'
        description: 'Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.'
        generate: expression
        from: '[a-zA-Z0-9]{40}'
    -
        name: GENERIC_WEBHOOK_SECRET
        displayName: 'Generic Webhook Secret'
        description: 'A secret string used to configure the Generic webhook.'
        generate: expression
        from: '[a-zA-Z0-9]{40}'
    -
        name: USE_SSL
        value: ''
    - 
        name: PKEY
        value: './cert_and_key/privatekey.pem'
    -
        name: SSLCERT
        value: './cert_and_key/certificate.crt'
    -
        name: HOST
        value: localhost
    -
        name: PORTABILITY_URL
        value: 'http://af-portability:8080'
    -
        name: AF_JWT_URL
        value: 'http://af-connect-mock:9998/jwt/rest/idp/v0/klientID'
    -
        name: AF_LOGIN_URL
        value: 'https://af-connect-mock.test.services.jtech.se/AuthenticationDispatcher/Dispatch?CT_ORIG_URL=https://af-connect.test.services.jtech.se'